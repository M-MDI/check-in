package main

import "fmt"

func printRevComb() {
res := ", 987, 986, 985, 984, 983, 982, 981, 980, 976, 975, 974, 973, 972, 971, 970, 965, 964, 963, 962, 961, 960, 954, 953, 952, 951, 950, 943, 942, 941, 940, 932, 931, 930, 921, 920, 910, 876, 875, 874, 873, 872, 871, 870, 865, 864, 863, 862, 861, 860, 854, 853, 852, 851, 850, 843, 842, 841, 840, 832, 831, 830, 821, 820, 810, 765, 764, 763, 762, 761, 760, 754, 753, 752, 751, 750, 743, 742, 741, 740, 732, 731, 730, 721, 720, 710, 654, 653, 652, 651, 650, 643, 642, 641, 640, 632, 631, 630, 621, 620, 610, 543, 542, 541, 540, 532, 531, 530, 521, 520, 510, 432, 431, 430, 421, 420, 410, 321, 320, 310, 210"
	/*// Iterate to generate combinations in descending order
	for i := 9; i >= 2; i-- {
		for j := i - 1; j >= 1; j-- {
			for k := j - 1; k >= 0; k-- {
				if i < 9 || j < 9 || k < 9 { // Skip the comma and space for the first item
					fmt.Print(", ")
				}
				fmt.Printf("%d%d%d", i, j, k)
			}
		}
	}*/	//fmt.Println() // Ensure the output ends with a newline
	fmt.Println(res)
}

func main() {
	printRevComb()
}

